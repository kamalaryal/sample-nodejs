{"version":3,"sources":["api/getJwt.js","api/authenticate.js","api/request.js","pages/forgotPassword/forgotPassword.js","pages/login/login.js","pages/login/login.Container.js","component/navbar/navbar.js","component/navbar/navbar.container.js","pages/profile/singleProfile.js","pages/profile/singleProfile.Container.js","pages/profile/profile.js","pages/profile/profile.Container.js","pages/signup/signup.js","pages/signup/signup.Container.js","pages/profile/editOtherProfile.js","pages/profile/EditOtherProfile.Container.js","pages/home/home.js","pages/OTPAuthentication/otpAuthentication.js","pages/OTPAuthentication/otpAuthentication.Container.js","api/getOTPStatus.js","pages/resetPassword/resetPassword.js","pages/resetPassword/resetPassword.Container.js","pages/forgotPassword/changePassword.js","pages/Verification/Verification.js","App.js","serviceWorker.js","index.js"],"names":["getJwt","JSON","parse","localStorage","getItem","getRole","JWT","token","role","window","atob","split","getUserId","userId","axios","defaults","baseURL","setDefaults","headers","common","concat","_request","url","method","arguments","length","undefined","data","get","post","put","patch","delete","ResetPassword","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","defineProperty","target","name","value","_getEmail","e","loading","preventDefault","request","email","state","toLowerCase","then","res","swal","message","catch","error","response","inherits","createClass","key","_this2","_this$props","props","react_default","a","createElement","Container","Header","as","color","textAlign","Form","size","onSubmit","Input","fluid","icon","iconPosition","placeholder","Button","content","Component","Login","apply","password","handleSubmit","Grid","style","height","verticalAlign","Column","maxWidth","type","Modal","trigger","marginTop","forgotPassword","LoginContainer","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setItem","stringify","login","stop","_x","assign","Navbar","_getPrototypeOf2","_len","args","Array","_key","activeItem","handleItemClick","Menu","secondary","justifyContent","display","flexDirection","alignItems","navLinks","map","element","index","Item","textTransform","active","onClick","children","react_router_dom","to","replace","SignOut","NavbarContainer","clear","logout","navbar","options","text","SingleProfile","fullName","currentPassword","confirmPassword","patchChangePassword","editProfile","loading1","columns","relaxed","stackable","label","Dropdown","button","className","floating","labeled","selection","Responsive","minWidth","Divider","vertical","SingleProfileContainer","componentDidMount","getProfileData","result","id","_id","_this$state","singleProfile","Profile","editWithRedirect","redirect","profile","react_router","pathname","Table","striped","unstackable","Row","HeaderCell","Body","Fragment","Cell","status","createdAt","disabled","toggleStatusProfile","ProfileContainer","loding","profile_profile","Signup","_updateField","Field","search","SignupContainer","field","signup","EditOtherProfile","adminPassword","editOtherProfile","patchotherPassword","EditOtherProfileContainer","location","profile_editOtherProfile","Home","navbar_container","exact","path","component","SignupPage","ProfilePage","OTPAuthentication","home","_getOTP","OTPAuthenticationContainer","otpStatus","otpAuthentication","_resetPassword","ResetPasswordContainer","passwordChange","resetPassword","match","params","_this$state2","Verification","verifyUserBase","Message","App","isGuest","ChangePassword","VerfiyUser","render","login_Container","getStatus","otpAuthentication_Container","resetPassword_Container","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.148f32c3.chunk.js","sourcesContent":["export const getJwt = () => {\r\n    return JSON.parse(localStorage.getItem('Loginjwt'));\r\n}","import { getJwt } from './getJwt';\r\n\r\nconst getRole = () => {\r\n\r\n    const JWT = getJwt();\r\n\r\n    if(JWT === null) {\r\n        return null;\r\n    }\r\n\r\n    let token = JWT.token;\r\n    \r\n    let role = JSON.parse(window.atob(token.split(\".\")[1])).role;\r\n\r\n    if(role === \"admin\") {\r\n        return 'admin';\r\n    }\r\n    else if(role === \"write\") {\r\n        return 'write';\r\n    }\r\n    else if(role === \"read\") {\r\n        return 'read';\r\n    }\r\n\r\n}\r\n\r\nconst getUserId = () => {\r\n\r\n    const JWT = getJwt();\r\n\r\n    if(JWT === null) {\r\n        return null;\r\n    }\r\n\r\n    let token = JWT.token;\r\n    \r\n    let id = JSON.parse(window.atob(token.split(\".\")[1])).userId;\r\n\r\n    return id\r\n\r\n}\r\n\r\nconst getStatus = () => {\r\n\r\n    const JWT = getJwt();\r\n\r\n    if(JWT === null) {\r\n        return null;\r\n    }\r\n\r\n    let token = JWT.token;\r\n    \r\n    let id = JSON.parse(window.atob(token.split(\".\")[1])).status;\r\n\r\n    return id\r\n\r\n}\r\n\r\nexport { getRole, getUserId, getStatus }","import axios from 'axios';\r\nimport { getJwt } from './getJwt';\r\n\r\naxios.defaults.baseURL = '/api/v1/';\r\n\r\nexport const setDefaults = () => {\r\n    if(getJwt() !== null) { \r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${getJwt().token}`;\r\n    }\r\n}\r\n\r\nsetDefaults();\r\n\r\nlet source = null;\r\n\r\nconst _request = (url, method = \"get\", data = {}, headers = {}) => {\r\n    switch(method) {\r\n\r\n        case \"get\":\r\n\r\n            return axios.get(url, headers);\r\n\r\n        case \"post\":\r\n        \r\n            return axios.post(url, data, headers);\r\n\r\n        case \"put\":\r\n\r\n            return axios.put(url, data, headers);\r\n\r\n        case \"patch\":\r\n\r\n            return axios.patch(url, data, headers);\r\n        \r\n        case \"delete\":\r\n    \r\n            return axios.delete(url, headers);\r\n\r\n        default:    \r\n\r\n    }\r\n}\r\n\r\n// cancel http requests before getting response\r\nexport const _cancelOnGoingRequest = () => {\r\n\r\n    source.cancel('request cancelled');\r\n\r\n}\r\n\r\nexport const _isCancellationError = (error) => {\r\n\r\n    return axios.isCancel(error);\r\n\r\n}\r\n\r\nexport default _request;","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport request from '../../api/request';\r\nimport { Button, Form, Header, Container } from 'semantic-ui-react';\r\n\r\nexport class ResetPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email:'',\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    _getEmail = (e,value) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n\r\n        request(`user/forgetpassword`, \"post\", {\r\n            email: this.state.email.toLowerCase()\r\n        })\r\n        .then(res => {\r\n\r\n            swal(res.data.message);\r\n            \r\n            this.setState({\r\n                email: '',\r\n                loading: false\r\n            });\r\n    \r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) {\r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n\r\n            this.setState({\r\n                loading: false\r\n            });\r\n\r\n        });\r\n            \r\n    }        \r\n    \r\n    render() {\r\n        const { email, loading } = this.props\r\n        return (\r\n            <Container>\r\n                <Header as='h2' color='teal' textAlign='center'>\r\n                    Enter E-mail\r\n                </Header>\r\n                <Form size='large' onSubmit={(e) => {this._getEmail(e)}}>\r\n\r\n                    <Form.Input\r\n                        fluid\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        placeholder='E-mail'\r\n                        name='email'\r\n                        onChange={(event) => this.onChange(event)} \r\n                        value={email}\r\n                    />\r\n    \r\n                    <Button\r\n                        color='teal'\r\n                        content='Send Reset Link'\r\n                        fluid\r\n                        size='large'\r\n                        loading={loading}\r\n                        onSubmit={(e) => {this._getEmail(e)}}\r\n                    />\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Grid, Header, Container, Modal } from 'semantic-ui-react';\r\nimport ForgotPassword from '../forgotPassword/forgotPassword';\r\n\r\nexport class Login extends Component {\r\n    render() {\r\n        const { email, password, loading, handleSubmit, onChange } = this.props\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Login to your account\r\n                        </Header>\r\n                        <Form size='large' onSubmit={(e) => {handleSubmit(e)}}>\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='user'\r\n                                iconPosition='left'\r\n                                placeholder='E-mail'\r\n                                name='email'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={email}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                name='password'\r\n                                onChange={(event) => onChange(event)}\r\n                                value={password}\r\n                            />\r\n            \r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                content='Login'\r\n                                size='large'\r\n                                loading={loading}\r\n                                onSubmit={(e) => {handleSubmit(e)}}\r\n                            />\r\n                        </Form>\r\n                            <Modal size='mini' trigger={<Button  style={{marginTop: '10px'}} content='Forgot Password ?' />}  >\r\n                            <ForgotPassword />\r\n                            </Modal>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport Login from './login';\r\nimport request from '../../api/request';\r\nimport { setDefaults }  from '../../api/request';\r\n\r\nexport class LoginContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false\r\n        }\r\n    } \r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e,value) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        request(\"user/login\", \"post\", {\r\n            email: this.state.email.toLowerCase(),\r\n            password: this.state.password\r\n        })\r\n        .then( async res => {\r\n            await localStorage.setItem('Loginjwt', JSON.stringify(res.data));\r\n            setDefaults();\r\n            this.props.login();\r\n            swal(res.data.message);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) { \r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n            \r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n       \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Login\r\n                {...this.state}\r\n                onChange = {this.onChange}\r\n                handleSubmit = {this.handleSubmit}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Button } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class Navbar extends Component {\r\n    state = { activeItem: 'myprofile' };\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n    \r\n    render() {\r\n        const { activeItem } = this.state;\r\n        return (\r\n            <nav>\r\n                <Menu secondary  style={{justifyContent: 'center'}}>\r\n                    <Menu.Menu style={{ display: \"flex\", flexDirection: \"row\", alignItems: 'center'}}>\r\n                        {\r\n                            this.props.navLinks && this.props.navLinks.map((element, index) => {\r\n                                return (\r\n                                    <Menu.Item\r\n                                        as='div'\r\n                                        name={element}\r\n                                        key={index}\r\n                                        style={{textTransform: 'uppercase'}}\r\n                                        active={activeItem === {element}}\r\n                                        onClick={this.handleItemClick}\r\n                                        children={<NavLink to={`${element.replace(/ /g, '') === 'myprofile' ? '/' : element.replace(/ /g, '')}`}>{element}</NavLink>}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                        <Button \r\n                            name='Sign Out'\r\n                            content='Sign Out'\r\n                            onClick={this.props.SignOut}\r\n                        />\r\n                    </Menu.Menu> \r\n                </Menu>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react';\r\nimport { getRole } from '../../api/authenticate';\r\nimport Navbar from './navbar.js';\r\n\r\nexport class NavbarContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        if(getRole() !== 'admin') {\r\n            this.state={\r\n                navLinks: [\r\n                    \"my profile\"\r\n                ]\r\n            }\r\n        } else {\r\n            this.state={\r\n                navLinks: [\r\n                    \"my profile\",\r\n                    \"all profile\",\r\n                    \"create a account\"\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    SignOut = (e) => {\r\n        localStorage.clear();\r\n        this.props.logout();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navbar\r\n                {...this.state}\r\n                logout={this.props.logout}\r\n                SignOut={this.SignOut}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarContainer\r\n","import React, { Component } from 'react';\r\nimport { Container, Responsive, Grid, Header, Button,  Form, Divider, Dropdown } from 'semantic-ui-react';\r\n\r\nconst options = [\r\n    { key: 'a', text: 'Admin', value: 'admin' },\r\n    { key: 'w', text: 'Write', value: 'write' },\r\n    { key: 'r', text: 'Read', value: 'read' },\r\n  ]\r\n\r\nexport class SingleProfile extends Component {\r\n    render() {\r\n        const { fullName, email, role, currentPassword, password, confirmPassword, patchChangePassword, onChange, editProfile, loading, loading1 } = this.props;\r\n        return (\r\n            <Container>\r\n\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                \r\n                <Grid.Column>\r\n\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        Account Details\r\n                    </Header>\r\n                    <Form onSubmit={(e) => {editProfile(e)}}>\r\n                    <Form.Input\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        label='Full Name'\r\n                        placeholder='Full Name'\r\n                        name='fullName'\r\n                        onChange={(event) => onChange(event)} \r\n                        value={fullName}\r\n                    />\r\n                    <Form.Input\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        label='E-mail'\r\n                        placeholder='E-mail'\r\n                        name='email'\r\n                        onChange={(event) => onChange(event)} \r\n                        value={email}\r\n                    />\r\n                    <Form.Input label='Role'>\r\n                        <Dropdown\r\n                            button\r\n                            fluid\r\n                            className='icon'\r\n                            floating\r\n                            labeled\r\n                            selection\r\n                            icon='user'\r\n                            options={options}\r\n                            placeholder='Select Role'\r\n                            value={role}\r\n                        />\r\n                    </Form.Input>\r\n\r\n                    <Button\r\n                        content='Save'\r\n                        color='teal'\r\n                        fluid\r\n                        size='large'\r\n                        loading={loading} \r\n                        onSubmit={(e) => {editProfile(e)}}\r\n                    />\r\n                    </Form>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column verticalAlign='middle'>\r\n                    \r\n                    <Grid textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column style={{ maxWidth: 450 }}>\r\n                            <Header as='h2' color='teal' textAlign='center'>\r\n                                Change Password\r\n                            </Header>\r\n                            <Form size='large' onSubmit={(e) => {patchChangePassword(e)}}>\r\n                                \r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Current password'\r\n                                    type='password'\r\n                                    name='currentPassword'\r\n                                    onChange={(event) => onChange(event)} \r\n                                    value={currentPassword}\r\n                                />\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='New password'\r\n                                    type='password'\r\n                                    name='password'\r\n                                    onChange={(event) => onChange(event)} \r\n                                    value={password}\r\n                                />\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Confirm Password'\r\n                                    type='password'\r\n                                    name='confirmPassword'\r\n                                    onChange={(event) => onChange(event)} \r\n                                    value={confirmPassword}\r\n                                />\r\n\r\n                                <Button\r\n                                    color='teal'\r\n                                    fluid\r\n                                    size='large'\r\n                                    content='Change Password'\r\n                                    loading={loading1} \r\n                                    onSubmit={(e) => {patchChangePassword(e)}}\r\n                                />\r\n\r\n                            </Form>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n\r\n                </Grid.Column>\r\n                \r\n                </Grid>\r\n\r\n                <Responsive minWidth={768}>\r\n                    <Divider vertical >Or</Divider>\r\n                </Responsive>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleProfile\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport SingleProfile from './singleProfile';\r\nimport request from '../../api/request';\r\n\r\nexport class SingleProfileContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            fullName: '',\r\n            email: '',\r\n            currentPassword: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            loading: false,\r\n            loading1: false\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProfileData();\r\n    }\r\n\r\n    editProfile = (e, value) => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        request(`user/editProfile`, \"patch\", {\r\n            email: this.state.email,\r\n            fullName: this.state.fullName\r\n        })\r\n        .then(res => {\r\n            swal(res.data.message);\r\n\r\n            this.setState({\r\n                email: this.state.email,\r\n                fullName: this.state.fullName,\r\n                loading: false\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) { \r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n            \r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    getProfileData = () => {\r\n    \r\n        request(`user/profile/single`, 'get')\r\n        .then(result => {\r\n\r\n            this.setState({\r\n                id: result.data._id,\r\n                fullName: result.data.fullName,\r\n                email: result.data.email,\r\n                role: result.data.role\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if(error.response && error.response.data && error.response.data.message) {\r\n                swal(error.response.data.message);\r\n            } else {\r\n                swal(\"Failed to connect server.\");\r\n            }\r\n            \r\n        });\r\n       \r\n    }\r\n\r\n    patchChangePassword = (e, value) => {\r\n        this.setState({\r\n            loading1: true\r\n        });\r\n\r\n        e.preventDefault();\r\n\r\n        const { email, currentPassword, password, confirmPassword } = this.state;\r\n\r\n        if (currentPassword.length === 0) {\r\n            this.setState({\r\n                loading1: false\r\n            });\r\n            \r\n            swal(\"Current Password is empty.\");\r\n\r\n        } else if (password !== confirmPassword) {\r\n            this.setState({\r\n                loading1: false\r\n            });\r\n            \r\n            swal(\"Password and Confirm Password do not match.\");\r\n            \r\n        } else {\r\n\r\n            request(`user/reset`, \"patch\", {\r\n                email: email,\r\n                currentPassword: currentPassword,\r\n                password: password,\r\n                confirmPassword: confirmPassword\r\n            })\r\n            .then(res => {\r\n                swal(res.data.message);\r\n    \r\n                this.setState({\r\n                    currentPassword: '',\r\n                    password: '',\r\n                    confirmPassword:'',\r\n                    loading1: false\r\n                });\r\n    \r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message) { \r\n                    swal(\"Opps!!! \" + error.response.data.message);\r\n                }\r\n                \r\n                this.setState({\r\n                    loading1: false\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SingleProfile\r\n                {...this.state}\r\n                getProfileData={this.getProfileData}\r\n                onChange={this.onChange}\r\n                editProfile={this.editProfile}\r\n                patchChangePassword={this.patchChangePassword}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleProfileContainer;\r\n","import React, { Component } from 'react'\r\nimport { Container, Table, Grid, Header, Button } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUserId } from '../../api/authenticate';\r\n\r\nexport class Profile extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            redirect : false,\r\n            index : \"\"\r\n        }\r\n    }\r\n\r\n    editWithRedirect = (index) => {\r\n        this.setState ({\r\n            redirect :  true,\r\n            index : index\r\n        })\r\n    } \r\n\r\n    render() {\r\n        const { profile } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: '/editprofile',\r\n                state: { data: profile[this.state.index] }\r\n            }}\r\n            />\r\n        }\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '30vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 800 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            All Account Details\r\n                        </Header>\r\n                        <Table striped unstackable={true} >\r\n\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                    <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Role</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Status</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Created Date</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Action</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {\r\n                                    profile && profile.map((data, index) =>\r\n                                        <Table.Row>\r\n                                            <React.Fragment key={index}>\r\n                                                <Table.Cell>{data.fullName}</Table.Cell>\r\n                                                <Table.Cell>{data.email}</Table.Cell>\r\n                                                <Table.Cell style={{textTransform:'capitalize'}}>{data.role}</Table.Cell>\r\n                                                <Table.Cell>{data.status === true ? 'Active' : 'Block' }</Table.Cell>\r\n                                                <Table.Cell>{data.createdAt.split('T')[0]}</Table.Cell>\r\n                                                <Table.Cell>\r\n                                                {\r\n                                                    getUserId() === data._id === true  ? \r\n                                                        <Button content='Block' disabled /> \r\n                                                        : \r\n                                                        data.status === true ?\r\n                                                        <Button content='Block' color='red' onClick={() => this.props.toggleStatusProfile(data._id, index)} /> :\r\n                                                        <Button content='Active' color='green' onClick={() =>this.props.toggleStatusProfile(data._id, index)} />\r\n                                                }\r\n                                                {\r\n                                                    getUserId() === data._id === true  ? \r\n                                                        <Button content='Edit' disabled /> \r\n                                                        : \r\n                                                        <Button content='Edit' onClick={() => this.editWithRedirect(index)}/> \r\n                                                }\r\n                                                </Table.Cell>\r\n                                            </React.Fragment>\r\n                                        </Table.Row>\r\n                                    )\r\n                                }\r\n                            </Table.Body>\r\n\r\n                        </Table>\r\n                    </Grid.Column>\r\n                </Grid>\r\n               </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport request from '../../api/request';\r\nimport Prfole from './profile';\r\n\r\nexport class ProfileContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            profile: [],\r\n            loding: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = () => {\r\n    \r\n        request(`user/profile`, 'get')\r\n        .then(result => {\r\n\r\n            this.setState({\r\n                profile: result.data\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if(error.response && error.response.data && error.response.data.message) {\r\n                swal(error.response.data.message);\r\n            } else {\r\n                swal(\"Failed to connect server.\");\r\n            }\r\n            \r\n        });\r\n       \r\n    }\r\n\r\n    toggleStatusProfile = (id, index) => {\r\n\r\n        let profile = this.state.profile;\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        request(`user/toggleStatus/${id}`, 'patch')\r\n        .then(res => {\r\n            \r\n            swal(res.data.message);\r\n            profile[index].status = ! profile[index].status;\r\n\r\n            this.setState({\r\n                loading: false,\r\n                profile: profile\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if(error.response && error.response.data && error.response.data.message) {\r\n                swal(error.response.data.message);\r\n            } else {\r\n                swal(\"Failed to connect server.\");\r\n            }\r\n\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            \r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Prfole \r\n                {...this.state}\r\n                toggleStatusProfile={this.toggleStatusProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileContainer;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Grid, Header, Dropdown, Container } from 'semantic-ui-react';\r\n\r\nconst options = [\r\n    { key: 'a', text: 'Admin', value: 'admin' },\r\n    { key: 'w', text: 'Write', value: 'write' },\r\n    { key: 'r', text: 'Read', value: 'read' },\r\n  ]\r\n\r\nexport class Signup extends Component {\r\n    render() {\r\n        const { fullName, email, password, confirmPassword, loading, _updateField, handleSubmit, onChange } = this.props\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Signup to create account\r\n                        </Header>\r\n                        <Form size='large' onSubmit={(e) => {handleSubmit(e)}}>\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='user plus'\r\n                                iconPosition='left'\r\n                                placeholder='Full Name'\r\n                                name='fullName'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={fullName}\r\n                            />\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='user plus'\r\n                                iconPosition='left'\r\n                                placeholder='E-mail'\r\n                                name='email'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={email}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                name='password'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={password}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Confirm Password'\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={confirmPassword}\r\n                            />\r\n                            <Form.Field>\r\n                                <Dropdown\r\n                                    button\r\n                                    fluid\r\n                                    className='icon'\r\n                                    floating\r\n                                    labeled\r\n                                    selection\r\n                                    icon='user plus'\r\n                                    options={options}\r\n                                    search\r\n                                    placeholder='Select Role'\r\n                                    onChange={(event,data) => _updateField(data.value, 'role')}\r\n                                />\r\n                            </Form.Field>\r\n            \r\n                            <Button\r\n                                color='teal'\r\n                                content='Create Account'\r\n                                fluid\r\n                                size='large'\r\n                                loading={loading}\r\n                                onSubmit={(e) => {handleSubmit(e)}}\r\n                            />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport Signup from './signup';\r\nimport request from '../../api/request';\r\n\r\nexport class SignupContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            role:'',\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n    \r\n    _updateField = (value,field) => {\r\n        this.setState({\r\n            [field] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e,value) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        const { password, confirmPassword } = this.state;\r\n\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            \r\n            swal(\"Password and Confirm Password do not match.\");\r\n        } else {\r\n            request(\"user/signup\", \"post\", {\r\n                fullName : this.state.fullName,\r\n                email: this.state.email.toLowerCase(),\r\n                password: this.state.password,\r\n                confirmPassword: this.state.confirmPassword,\r\n                role: this.state.role\r\n            })\r\n            .then( res => {\r\n                swal(res.data.message);\r\n                \r\n                this.setState({\r\n                    fullName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword:'',\r\n                    role:'',\r\n                    loading: false\r\n                });\r\n        \r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message) {\r\n                    swal(\"Opps!!! \" + error.response.data.message);\r\n                }\r\n\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n            \r\n        }        \r\n    }\r\n    render() {\r\n        return (\r\n            <Signup\r\n                {...this.state}\r\n                onChange = {this.onChange}\r\n                _updateField = {this._updateField}\r\n                handleSubmit = {this.handleSubmit}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupContainer;\r\n","import React, { Component } from 'react';\r\nimport { Container, Divider, Responsive, Dropdown, Grid, Form, Header, Button } from 'semantic-ui-react';\r\n\r\nconst options = [\r\n    { key: 'a', text: 'Admin', value: 'admin' },\r\n    { key: 'w', text: 'Write', value: 'write' },\r\n    { key: 'r', text: 'Read', value: 'read' },\r\n  ]\r\n  \r\nexport class EditOtherProfile extends Component {\r\n    render() {\r\n        const { fullName, email, role, adminPassword, password, confirmPassword, loading, loading1, onChange, _updateField, editOtherProfile, patchotherPassword } = this.props;\r\n        return (\r\n            <Container>\r\n\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                    <Grid.Column>\r\n\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Account Details\r\n                        </Header>\r\n                        <Form onSubmit={(e) => {editOtherProfile(e)}}>\r\n                        <Form.Input\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            label='Full Name'\r\n                            placeholder='Full Name'\r\n                            name='fullName'\r\n                            onChange={(event) => onChange(event)} \r\n                            value={fullName}\r\n                        />\r\n                        <Form.Input\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            label='E-mail'\r\n                            placeholder='E-mail'\r\n                            name='email'\r\n                            onChange={(event) => onChange(event)} \r\n                            value={email}\r\n                        />\r\n                        <Form.Input label='Role'>\r\n                            <Dropdown\r\n                                button\r\n                                fluid\r\n                                className='icon'\r\n                                floating\r\n                                labeled\r\n                                selection\r\n                                icon='user'\r\n                                options={options}\r\n                                placeholder='Select Role'\r\n                                value={role}\r\n                                onChange={(event,data) => _updateField(data.value, 'role')}\r\n                            />\r\n                        </Form.Input>\r\n\r\n                        <Button\r\n                            content='Save'\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            loading={loading} \r\n                            onSubmit={(e) => {editOtherProfile(e)}}\r\n                        />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                    \r\n                    <Grid.Column verticalAlign='middle'>\r\n                    <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                        <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Change User Password\r\n                        </Header>\r\n                        <Form onSubmit={(e) => {patchotherPassword(e)}}>\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Admin password'\r\n                                type='password'\r\n                                name='adminPassword'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={adminPassword}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='New password'\r\n                                type='password'\r\n                                name='password'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={password}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Confirm Password'\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={confirmPassword}\r\n                            />\r\n\r\n                            <Button\r\n                                content='Change Password'\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                loading={loading1} \r\n                                onSubmit={(e) => {patchotherPassword(e)}}\r\n                            />\r\n                        </Form>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Grid.Column>\r\n                \r\n                </Grid>\r\n                <Responsive minWidth={768}>\r\n                    <Divider vertical >Or</Divider>\r\n                </Responsive>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditOtherProfile;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport request from '../../api/request';\r\nimport EditOtherProfile from './editOtherProfile';\r\n\r\nexport class EditOtherProfileContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let profile = props.location.state.data\r\n        this.state = {\r\n            id: profile._id,\r\n            fullName: profile.fullName,\r\n            email: profile.email,\r\n            role: profile.role,\r\n            adminPassword: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            loading: false,\r\n            loading1: false\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    _updateField = (value,field) => {\r\n        this.setState({\r\n            [field] : value\r\n        });\r\n    }\r\n\r\n    editOtherProfile = (e, value) => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        request(`user/editOtherProfile/${this.state.id}`, \"patch\", {\r\n            email: this.state.email,\r\n            fullName: this.state.fullName,\r\n            role: this.state.role\r\n        })\r\n        .then(res => {\r\n            swal(res.data.message);\r\n\r\n            this.setState({\r\n                email: this.state.email,\r\n                fullName: this.state.fullName,\r\n                role: this.state.role,\r\n                loading: false\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) { \r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n            \r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    patchotherPassword = (e, value) => {\r\n        this.setState({\r\n            loading1: true\r\n        });\r\n\r\n        e.preventDefault();\r\n\r\n        const { id, email, adminPassword, password, confirmPassword } = this.state;\r\n\r\n        if (adminPassword.length === 0) {\r\n            this.setState({\r\n                loading1: false\r\n            });\r\n            \r\n            swal(\"Admin Password is empty.\");\r\n\r\n        } else if (password !== confirmPassword) {\r\n            this.setState({\r\n                loading1: false\r\n            });\r\n            \r\n            swal(\"Password and Confirm Password do not match.\");\r\n            \r\n        } else {\r\n\r\n            request(`user/reset/single/${id}`, \"patch\", {\r\n                email: email,\r\n                adminPassword: adminPassword,\r\n                password: password,\r\n                confirmPassword: confirmPassword\r\n            })\r\n            .then(res => {\r\n                swal(res.data.message);\r\n    \r\n                this.setState({\r\n                    adminPassword: '',\r\n                    password: '',\r\n                    confirmPassword:'',\r\n                    loading1: false\r\n                });\r\n    \r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message) { \r\n                    swal(\"Opps!!! \" + error.response.data.message);\r\n                }\r\n                \r\n                this.setState({\r\n                    loading1: false\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <EditOtherProfile\r\n                {...this.state}\r\n                onChange={this.onChange}\r\n                _updateField={this._updateField}\r\n                editOtherProfile={this.editOtherProfile}\r\n                patchotherPassword={this.patchotherPassword}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditOtherProfileContainer;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport NavBar from '../../component/navbar/navbar.container';\r\nimport SingleProfile from '../profile/singleProfile.Container';\r\nimport ProfilePage from '../profile/profile.Container';\r\nimport SignupPage from '../signup/signup.Container';\r\nimport EditOtherProfile from '../profile/EditOtherProfile.Container';\r\nimport { getRole } from '../../api/authenticate';\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <NavBar logout={this.props.logout} />\r\n                <Switch>\r\n                    <Route exact path='/' component={SingleProfile} />\r\n                    {\r\n                        getRole() === 'admin' ?\r\n                            <Route exact path='/createaaccount' component={SignupPage} /> : <Redirect to='/myprofile' />\r\n                    }\r\n                    {\r\n                        getRole() === 'admin' ?\r\n                        <Route exact path='/editprofile' component={EditOtherProfile} data={this.props} /> : <Redirect to='/myprofile' />\r\n                    }\r\n                    {\r\n                        getRole() === 'admin' ?\r\n                        <Route exact path='/allprofile' component={ProfilePage} /> : <Redirect to='/myprofile' />\r\n                    }\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Container, Header, Grid, Form, Button } from 'semantic-ui-react';\r\nimport Home from '../home/home';\r\n\r\nexport class OTPAuthentication extends Component {\r\n    render() {\r\n        if (this.props.redirect) {\r\n            return <Home logout={this.props.logout} />\r\n        }\r\n        const { token, loading, handleSubmit, onChange, loading1, _getOTP } = this.props;\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            OTP Authentication\r\n                        </Header>\r\n                        <Form size='large' onSubmit={(e) => {handleSubmit(e)}}>\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='user'\r\n                                iconPosition='left'\r\n                                placeholder='Token'\r\n                                name='token'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={token}\r\n                            />\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                content='Submit OTP Code'\r\n                                size='large'\r\n                                loading={loading}\r\n                                onSubmit={(e) => {handleSubmit(e)}}\r\n                            />\r\n\r\n                        </Form>\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                style={{marginTop:'10px'}}\r\n                                content='Get New OTP Code'\r\n                                size='large'\r\n                                loading={loading1}\r\n                                onClick={(e) => {_getOTP(e)}}\r\n                            />\r\n\r\n                    </Grid.Column>\r\n                </Grid>    \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OTPAuthentication;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport request from '../../api/request';\r\nimport OTPAuthentication  from './otpAuthentication';\r\nimport { setDefaults }  from '../../api/request';\r\nimport { getOTPStatus } from '../../api/getOTPStatus';\r\n\r\nexport class OTPAuthenticationContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: '',\r\n            redirect: false,\r\n            loading: false,\r\n            loading1: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(getOTPStatus()) {\r\n            this.setState({\r\n                redirect: true\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e,value) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        request(\"user/validateOTP\", \"post\", {\r\n            token: this.state.token\r\n        })\r\n        .then(async res => {\r\n\r\n            await localStorage.setItem('OTPStatus', JSON.stringify(res.data.otpStatus));\r\n            setDefaults();\r\n            swal(res.data.message);\r\n\r\n            this.setState({\r\n                loading: false,\r\n                redirect: true\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) { \r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n            \r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n       \r\n    }\r\n\r\n    _getOTP = () => {\r\n\r\n        this.setState({\r\n            loading1: true\r\n        });\r\n    \r\n        request(\"user/getOTP\", \"get\")\r\n        .then(res => {\r\n\r\n            swal(res.data.message);\r\n\r\n            this.setState({\r\n                loading1: false\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) { \r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n            \r\n            this.setState({\r\n                loading1: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <OTPAuthentication \r\n                {...this.state}\r\n                {...this.props}\r\n                onChange={this.onChange}\r\n                handleSubmit={this.handleSubmit}\r\n                _getOTP={this._getOTP}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default OTPAuthenticationContainer;\r\n","export const getOTPStatus = () => {\r\n    return JSON.parse(localStorage.getItem('OTPStatus'));\r\n}","import React, { Component } from 'react';\r\nimport { Button, Form, Grid, Header, Container } from 'semantic-ui-react';\r\n\r\nexport class ResetPassword extends Component {\r\n    render() {\r\n        const { password, confirmPassword, loading, _resetPassword, onChange } = this.props\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Reset Password\r\n                        </Header>\r\n                        <Form size='large' onSubmit={(e) => {_resetPassword(e)}}>\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                name='password'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={password}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Confirm Password'\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                onChange={(event) => onChange(event)} \r\n                                value={confirmPassword}\r\n                            />\r\n            \r\n                            <Button\r\n                                color='teal'\r\n                                content='Change Password'\r\n                                fluid\r\n                                size='large'\r\n                                loading={loading}\r\n                                onSubmit={(e) => {_resetPassword(e)}}\r\n                            />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport request from '../../api/request';\r\nimport ResetPassword from './resetPassword';\r\n\r\nexport class ResetPasswordContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            password: '',\r\n            confirmPassword:'',\r\n            loading: false,\r\n            passwordChange: false\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n    \r\n    _resetPassword = (e,value) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        const { password, confirmPassword } = this.state;\r\n\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            \r\n            swal(\"Password and Confirm Password do not match.\");\r\n        } else {\r\n            request(`user/password/reset`, \"patch\", {\r\n                password: this.state.password,\r\n                confirmPassword: this.state.confirmPassword\r\n            })\r\n            .then( async res => {\r\n\r\n                swal(res.data.message);\r\n                localStorage.clear();\r\n                this.props.logout();\r\n                \r\n                this.setState({\r\n                    password: '',\r\n                    confirmPassword:'',\r\n                    loading: false,\r\n                    passwordChange: true\r\n                });\r\n        \r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message) {\r\n                    swal(\"Opps!!! \" + error.response.data.message);\r\n                }\r\n\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n            \r\n        }        \r\n    }\r\n\r\n    render() {\r\n        if(this.state.passwordChange) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <ResetPassword\r\n                {...this.state}\r\n                onChange = {this.onChange}\r\n                _resetPassword = {this._resetPassword}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPasswordContainer;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\nimport request from '../../api/request';\r\nimport { Button, Form, Grid, Header, Container } from 'semantic-ui-react';\r\n\r\nexport class ResetPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            password: '',\r\n            confirmPassword:'',\r\n            loading: false,\r\n            passwordChange: false,\r\n            token: ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n    \r\n    _resetPassword = (e) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        e.preventDefault();\r\n    \r\n        const { password, confirmPassword } = this.state;\r\n        let token = this.props.match.params.token;\r\n\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            \r\n            swal(\"Password and Confirm Password do not match.\");\r\n        } else {\r\n            request(`user/forgetpassword/${token}`, \"patch\", {\r\n                password: this.state.password,\r\n                confirmPassword: this.state.confirmPassword\r\n            })\r\n            .then(res => {\r\n                swal(res.data.message);\r\n                \r\n                this.setState({\r\n                    password: '',\r\n                    confirmPassword:'',\r\n                    loading: false,\r\n                    passwordChange: true\r\n                });\r\n        \r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message) {\r\n                    swal(\"Opps!!! \" + error.response.data.message);\r\n                }\r\n\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n            \r\n        }        \r\n    }\r\n    render() {\r\n        const { password, confirmPassword, loading, passwordChange } = this.state;\r\n        if (passwordChange) {\r\n            return <Redirect to={{\r\n                pathname: '/'\r\n            }}\r\n            />\r\n        }\r\n        return (\r\n            <Container>\r\n                <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Reset Password\r\n                        </Header>\r\n                        <Form size='large' onSubmit={(e) => {this._resetPassword(e)}}>\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                name='password'\r\n                                onChange={(event) => this.onChange(event)} \r\n                                value={password}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='Confirm Password'\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                onChange={(event) => this.onChange(event)} \r\n                                value={confirmPassword}\r\n                            />\r\n            \r\n                            <Button\r\n                                color='teal'\r\n                                content='Change Password'\r\n                                fluid\r\n                                size='large'\r\n                                loading={loading}\r\n                                onSubmit={(e) => {this._resetPassword(e)}}\r\n                            />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport { Container, Message } from 'semantic-ui-react';\r\nimport request from '../../api/request';\r\n\r\nclass Verification extends Component {\r\n\r\n    componentDidMount() {\r\n        this.verifyUserBase()\r\n    }\r\n\r\n    verifyUserBase = () => {\r\n\r\n        let token = this.props.match.params.token;\r\n\r\n        request(`/user/verification/${token}`, 'patch')\r\n        .then(res => {\r\n            swal(\"Your profile is verified.\");\r\n        })\r\n        .catch(error => {\r\n            if (error.response.data.message) {\r\n                swal(\"Opps!!! \" + error.response.data.message);\r\n            }\r\n        });\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Message>\r\n                    <Message.Header>Your profile is verified.</Message.Header>\r\n                </Message>    \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Verification\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport{ getJwt } from './api/getJwt';\r\nimport { getStatus } from './api/authenticate';\r\nimport LoginPage from './pages/login/login.Container';\r\nimport OTPAuthentication from './pages/OTPAuthentication/otpAuthentication.Container';\r\nimport ResetPassword from './pages/resetPassword/resetPassword.Container';\r\nimport ChangePassword from './pages/forgotPassword/changePassword';\r\nimport VerfiyUser from './pages/Verification/Verification';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tisGuest: getJwt() === null ? true : false\r\n    };\r\n\r\n  }\r\n\r\n  login = () => {\r\n\r\n    this.setState({\r\n      isGuest: false\r\n    })\r\n  }\r\n\r\n  logout = () => {\r\n\r\n    this.setState({\r\n      isGuest: true\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/forgotpassword/:token?\" component={ChangePassword} />\r\n          <Route exact path=\"/user/verification/:token?\" component={VerfiyUser} />\r\n          <Route path=\"/\" render={() =>  !this.state.isGuest ?\r\n             !getStatus() ? <ResetPassword logout={this.logout} /> : <OTPAuthentication logout={this.logout} /> : \r\n             <LoginPage login={this.login} />} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}